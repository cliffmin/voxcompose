name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }} / Java ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        java: [11, 17, 21]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Run tests
        run: ./gradlew test --no-daemon --info
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-java${{ matrix.java }}
          path: build/reports/tests/
          
      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: always() && github.event_name == 'pull_request'
        continue-on-error: true
        with:
          name: Tests - ${{ matrix.os }} / Java ${{ matrix.java }}
          path: build/test-results/test/*.xml
          reporter: java-junit
          fail-on-empty: false
          
  build:
    name: Build and verify
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Build with Gradle
        run: ./gradlew build --no-daemon
        
      - name: Build fat JAR
        run: ./gradlew fatJar --no-daemon
        
      - name: Verify JAR
        run: |
          echo "Checking JAR file exists..."
          ls -la build/libs/
          JAR_FILE=$(find build/libs -name "*-all.jar" | head -1)
          echo "Found JAR: $JAR_FILE"
          echo "Testing JAR execution..."
          java -jar "$JAR_FILE" --help || true
          
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: voxcompose-jar
          path: build/libs/*-all.jar
          retention-days: 7
          
  integration-test:
    name: Integration Tests
    runs-on: macos-latest
    needs: build
    continue-on-error: true  # Don't fail the whole workflow if integration tests fail
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: voxcompose-jar
          path: build/libs/
          
      - name: Install Ollama
        continue-on-error: true
        run: |
          brew install ollama || true
          # Start Ollama in background
          ollama serve &
          sleep 5
          
      - name: Pull test model
        continue-on-error: true
        run: |
          ollama pull tinyllama || true
          
      - name: Run integration tests
        continue-on-error: true
        run: |
          cd tests
          ./run_tests.sh || true
          
      - name: Test self-learning
        continue-on-error: true
        run: |
          cd tests
          ./validate_self_learning.sh || true
          
      - name: Generate metrics
        continue-on-error: true
        run: |
          cd tests
          ./generate_metrics.sh || true
          
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain --no-daemon || true
        continue-on-error: true
        
      - name: Run SpotBugs
        run: ./gradlew spotbugsMain --no-daemon || true
        continue-on-error: true
        
      - name: Check dependencies
        run: ./gradlew dependencies --no-daemon